! function (t, i, e, s) {
    "use strict";

    function a(e, s, a) {
        var n = e.getBoundingClientRect();
        return n.top + (s || 0) * (n.bottom - n.top) <= t(i).height() && (!a || a && n.bottom > (s || 0))
    }

    function n(t) {
        var i = /^(([^<>()\[\]\\.,;:\s@']+(\.[^<>()\[\]\\.,;:\s@']+)*)|('.+'))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        return t && i.test(t)
    }

    function o(i) {
        return t(i).serializeArray().reduce(function (t, i) {
            return t[i.name] = i.value, t
        }, {})
    }

    function r(i, e) {
        t("html, body").animate({
            scrollTop: (isNaN(i) ? t(i).offset().top + 1 : i) - (e.offset || 0)
        }, e.duration || l(i), e.easing || "easeInOutQuad", e.callback)
    }

    function l(i) {
        return Math.min(600, 3 * Math.abs(t("body").scrollTop() - (isNaN(i) ? t(i).offset().top : i)))
    }

    function c(t, i) {
        var e;
        return function () {
            clearTimeout(e), e = setTimeout(function () {
                t.call(this, Array.prototype.slice.call(arguments))
            }.bind(this), i || 300)
        }.bind(this)
    }

    function h(t) {
        var i = new ArrayBuffer(4);
        new DataView(i).setUint32(0, parseInt(t.slice(1), 16), !1);
        var e = new Uint8Array(i);
        return {
            r: e[1],
            g: e[2],
            b: e[3],
            toString: function () {
                return e[1] + "," + e[2] + "," + e[3]
            }
        }
    }

    function d(i) {
        var e = i.find("defs"),
            s = e.find("[data-mask-id]"),
            a = s.data("mask-id");
        i.addClass("is-processed"), i.find("path").each(function (n) {
            var o = this.getTotalLength(),
                r = a.replace(/##/g, n),
                l = s.clone().attr("id", r).append(t(this).clone());
            e.append(l), t(this).attr("clip-path", "url(#" + r + ")"), t(this).addClass("letter"), t(this).css("animation-delay", (1e3 * parseFloat(i.css("animation-delay")) || 0) + 100 * n + "ms"), t(this).attr({
                "data-length": o,
                "stroke-dasharray": o,
                "stroke-dashoffset": o
            })
        })
    }

    function f(i, e) {
        var s = t('<span class="error" />');
        return s.html(e), i.addClass("has-error"), {
            elem: s.appendTo(i),
            timeout: setTimeout(function () {
                i.removeClass("has-error").find(".error").remove()
            }, 3e3)
        }
    }

    function m(t) {
        t.removeClass("has-error").find(".error").remove()
    }

    function u(t) {
        var i, e, s, a, n, o;
        if (i = 500, e = 450, n = 420.7, o = 277.9, s = t.x - i, a = t.y - e, s * s / (n * n) + a * a / (o * o) <= 1) return !0;
        return s = t.x - 283.45, a = t.y - (538.2 - 50), Math.sqrt(s * s + a * a) <= 215.8 || (i = 826.45, e = 567.2, n = 115.6, o = 210.4, s = t.x - i, a = t.y - e, s * s / (n * n) + a * a / (o * o) <= 1)
    }

    function y(t, i) {
        t.setPosition(v(i.x), g(i.y))
    }

    function v(t) {
        return t
    }

    function g(t) {
        return .5 * k.height() + .4 * k.height() * t / 100
    }

    function p() {
        clearTimeout(tt), tt = setTimeout(function () {
            this.stable && C(this)
        }.bind(this), 500)
    }

    function x() {
        clearTimeout(tt), T()
    }

    function b() {
        clearTimeout(tt), C(this)
    }

    function C(i) {
        it = i, et.addClass("is-active"), et.attr("data-type", i.elem.data("type")), t("#team-section").addClass("has-active-member").attr("data-active-member", i.elem.data("type")), t("#active-team-member").html(it.elem.find(".team-member__info").html())
    }

    function T() {
        it = null, et.removeClass("is-active"), et.removeAttr("data-type"), st.css("width", ""), t("#team-section").removeClass("has-active-member")
    }

    function M() {
        var t = i.navigator.userAgent,
            e = t.indexOf("MSIE ");
        if (e > 0) return parseInt(t.substring(e + 5, t.indexOf(".", e)), 10);
        if (t.indexOf("Trident/") > 0) {
            var s = t.indexOf("rv:");
            return parseInt(t.substring(s + 3, t.indexOf(".", s)), 10)
        }
        var a = t.indexOf("Edge/");
        return a > 0 && parseInt(t.substring(a + 5, t.indexOf(".", a)), 10)
    }
    var k = t(i),
        w = function () {
            return i.requestAnimationFrame || i.webkitRequestAnimationFrame || i.mozRequestAnimationFrame || i.msRequestAnimationFrame || i.oRequestAnimationFrame || function (t) {
                return i.setTimeout(t, 1e3 / 60)
            }
        }(),
        q = (function () {
            i.cancelAnimationFrame || i.webkitCancelAnimationFrame || i.mozCancelAnimationFrame || i.msCancelAnimationFrame || i.oCancelAnimationFrame
        }(), 0),
        A = 0;
    k.on("mousemove.mouseTracker", function (t) {
        q = t.pageX, A = t.pageY
    });
    var E = k.width(),
        S = k.height();
    k.on("resize.windowTracker", c(function () {
        E = k.width(), S = k.height()
    }));
    var z = k.scrollTop();
    k.on("scroll", function () {
        z = k.scrollTop()
    }), k.on("scroll", function i() {
        return t(".svg-text").not(".is-processed").each(function () {
            a(this, -100, !0) && d(t(this))
        }), i
    }());
    var D = t(".canvas-wrap canvas");
    k.on("resize.resizeCanvas", c(function i() {
        return D.each(function () {
            this.width = 2 * t(this).parent().width(), this.height = 2 * t(this).parent().height(), t(this).width(.5 * this.width), t(this).height(.5 * this.height)
        }), i
    }())), k.on("scroll", function e() {
        return t("body")[t(i).scrollTop() > 0 ? "addClass" : "removeClass"]("is-scrolled"), t("body")[t(i).scrollTop() > 100 ? "addClass" : "removeClass"]("is-scrolled-more"), t("[data-scroll-spy]").not(".is-visible").each(function () {
            a(this, parseInt(t(this).data("scroll-spy"), 10) / 100 || 1) && t(this).addClass("is-visible")
        }), e
    }()), t("[data-break-to]").each(function () {
        if ("words" === t(this).data("break-to")) {
            var i = t(this).text().trim().split(" ");
            i = i.map(function (t, e) {
                return '<span class="word" style="animation-delay: ' + (800 + 50 * e) + 'ms;">' + t + "</span>" + (e < i.length - 1 ? '<span class="space"> </span>' : "")
            }), t(this).html(i)
        }
    }), t("#main-nav a").on("click", function () {
        var i = t(this).attr("href");
        return r(t(i), {
            easing: "easeInOutCirc"
        }), t(this).closest("li").addClass("is-active").siblings().removeClass("is-active"), t(".main-nav-toggle").removeClass("is-active"), t("#main-nav").removeClass("is-active"), t("html").removeClass("main-nav--is-active"), !1
    }), t(".main-nav-toggle").on("click", function () {
        t(this).toggleClass("is-active");
        var i = t(this).hasClass("is-active");
        return t("#main-nav")[i ? "addClass" : "removeClass"]("is-active"), t("html")[i ? "addClass" : "removeClass"]("main-nav--is-active"), !1
    }), k.on("scroll", function () {
        a(t("#hero-section")[0], 0, !0) ? t("#main-nav li").eq(0).addClass("is-active").siblings().removeClass("is-active") : a(t("#products-section")[0], 0, !0) ? t("#main-nav li").eq(1).addClass("is-active").siblings().removeClass("is-active") : a(t("#team-section")[0], 0, !0) ? t("#main-nav li").eq(2).addClass("is-active").siblings().removeClass("is-active") : a(t("#contact-section")[0], 0, !0) && t("#main-nav li").eq(3).addClass("is-active").siblings().removeClass("is-active")
    }), t("#scroll-teaser").on("click", function () {
        return r(t("#intro-section"), {
            easing: "easeInOutCirc"
        }), !1
    }), t(".macbook").on("mousedown", function () {
        var e = t(this),
            s = q,
            a = A;
        return t(i).on("mouseup.macbook", function () {
            var n = q - s,
                o = A - a,
                r = Math.sqrt(n * n + o * o),
                l = 180 * Math.atan2(o, n) / Math.PI;
            (r > 5 && l > 45 && l < 135 || l > -135 && l < -45) && (e[l > 0 ? "addClass" : "removeClass"]("is-closed").addClass("is-animating"), clearTimeout(e.data("timeout")), e.data("timeout", setTimeout(function () {
                e.removeClass("is-animating")
            }, 1e3))), t(i).off("mouseup.macbook")
        }), !1
    });
    var Y = "7529 Cedar Rd Macungie PA 18062",
        I = [{
            featureType: "water",
            elementType: "geometry.fill",
            stylers: [{
                color: "#82ceff"
            }]
        }, {
            featureType: "transit",
            stylers: [{
                color: "#808080"
            }, {
                visibility: "off"
            }]
        }, {
            featureType: "road.highway",
            elementType: "geometry.stroke",
            stylers: [{
                visibility: "on"
            }, {
                color: "#b3b3b3"
            }]
        }, {
            featureType: "road.highway",
            elementType: "geometry.fill",
            stylers: [{
                color: "#ffffff"
            }]
        }, {
            featureType: "road.local",
            elementType: "geometry.fill",
            stylers: [{
                visibility: "on"
            }, {
                color: "#ffffff"
            }, {
                weight: 1.8
            }]
        }, {
            featureType: "road.local",
            elementType: "geometry.stroke",
            stylers: [{
                color: "#d7d7d7"
            }]
        }, {
            featureType: "poi",
            elementType: "geometry.fill",
            stylers: [{
                visibility: "on"
            }, {
                color: "#ebebeb"
            }]
        }, {
            featureType: "administrative",
            elementType: "geometry",
            stylers: [{
                color: "#a7a7a7"
            }]
        }, {
            featureType: "road.arterial",
            elementType: "geometry.fill",
            stylers: [{
                color: "#ffffff"
            }]
        }, {
            featureType: "road.arterial",
            elementType: "geometry.fill",
            stylers: [{
                color: "#ffffff"
            }]
        }, {
            featureType: "landscape",
            elementType: "geometry.fill",
            stylers: [{
                visibility: "on"
            }, {
                color: "#efefef"
            }]
        }, {
            featureType: "road",
            elementType: "labels.text.fill",
            stylers: [{
                color: "#696969"
            }]
        }, {
            featureType: "administrative",
            elementType: "labels.text.fill",
            stylers: [{
                visibility: "on"
            }, {
                color: "#737373"
            }]
        }, {
            featureType: "poi",
            elementType: "labels.icon",
            stylers: [{
                visibility: "on"
            }]
        }, {
            featureType: "poi",
            elementType: "labels",
            stylers: [{
                visibility: "on"
            }]
        }, {
            featureType: "road.arterial",
            elementType: "geometry.stroke",
            stylers: [{
                color: "#d6d6d6"
            }]
        }, {
            featureType: "road",
            elementType: "labels.icon",
            stylers: [{
                visibility: "off"
            }]
        }, {}, {
            featureType: "poi",
            elementType: "geometry.fill",
            stylers: [{
                color: "#dadada"
            }]
        }];
    "undefined" != typeof google && t("#google-map").gmap3({
        address: Y,
        mapTypeControl: !1,
        mapTypeId: "shadeOfGrey",
        zoomControl: !1,
        scrollwheel: !1,
        streetViewControl: !1,
        zoom: 14
    }).styledmaptype("shadeOfGrey", I).marker({
        address: Y,
        icon: {
            url: "img/marker.png",
            size: new google.maps.Size(48, 48),
            scaledSize: new google.maps.Size(48, 48)
        }
    }), t("#contact-form form").find("input, textarea").on("click focus keydown", function () {
        m(t(this).closest(".form-field"))
    }), t("#contact-form form").on("submit", function () {
        function e() {
            t("#contact-form, #contact-form button").addClass("has-succeeded")
        }

        function s() {
            t("#contact-form, #contact-form button").addClass("has-failed"), setTimeout(function () {
                t("input, textarea, button", r).removeAttr("disabled"), t("#contact-form, #contact-form button").removeClass("is-loading has-failed")
            }, 3e3)
        }
        var a = [],
            r = t(this),
            l = o(r);
        if (m(r), l.name || a.push({
                field: r.find(".form-field--name"),
                message: "This field is required"
            }), l.subject || a.push({
                field: r.find(".form-field--subject"),
                message: "This field is required"
            }), l.email || a.push({
                field: r.find(".form-field--email"),
                message: "This field is required"
            }), l.message || a.push({
                field: r.find(".form-field--message"),
                message: "This field is required"
            }), l.email && !n(l.email) && a.push({
                field: r.find(".form-field--email"),
                message: "Please enter a valid email address"
            }), a.length) return a[0].field.find("input, textarea").focus(), a.forEach(function (t, i) {
            f(t.field, t.message).elem[0].style.animationDelay = 50 * i + "ms"
        }), !1;
        var c = r.find(".g-recaptcha").attr("data-gid");
        return t("input, textarea, button", r).attr("disabled", "disabled"), i.onRecaptchaSuccess = function (i) {
            l.token = i, t("#contact-form, #contact-form button").addClass("is-loading"), t.post(r.attr("action"), l).done(function (t, i, a) {
                200 === a.status ? (e(), setTimeout(function () {
                    grecaptcha.reset(c)
                }, 1e3)) : s()
            }).fail(s)
        }, grecaptcha.execute(c), !1
    }), t(".social-links").on("mouseover", "a", function () {
        t(this).closest(".social-links").removeClass("is-active--facebook is-active--twitter is-active--linkedin"), t(this).hasClass("social-link--facebook") ? t(this).closest(".social-links").addClass("is-active--facebook") : t(this).hasClass("social-link--twitter") ? t(this).closest(".social-links").addClass("is-active--twitter") : t(this).hasClass("social-link--linkedin") && t(this).closest(".social-links").addClass("is-active--linkedin")
    }).on("mouseout", function () {
        t(this).removeClass("is-active--facebook is-active--twitter is-active--linkedin")
    });
    var O = function (t) {
        this.config = t, this.canvas = t.canvas, this.context = t.context, this.bounds = {
            right: 1 * this.canvas.width,
            left: 0 * this.canvas.width,
            top: 0 * this.canvas.height,
            bottom: 1 * this.canvas.height
        }, this.x = void 0 !== t.x ? t.x : 0, this.y = void 0 !== t.y ? t.y : 0, this.vx = void 0 !== t.vx ? t.vx : 10 * Math.random() - 5, this.vy = void 0 !== t.vy ? t.vy : 10 * Math.random() - 5, this.color = void 0 !== t.color ? t.color : "#ffffff", this.radius = t.radius || 3, this.opacity = void 0 !== t.opacity ? t.opacity : .3, this.friction = 1
    };
    O.prototype = {
        randomizePosition: function () {
            this.x = this.bounds.left + Math.random() * (this.bounds.right - this.bounds.left), this.y = this.bounds.top + Math.random() * (this.bounds.bottom - this.bounds.top)
        },
        update: function () {
            this.x += this.vx * this.friction, this.y += this.vy * this.friction, this.x < this.bounds.left && (this.x = this.bounds.right), this.x > this.bounds.right && (this.x = this.bounds.left), this.y < this.bounds.top && (this.y = this.bounds.bottom), this.y > this.bounds.bottom && (this.y = this.bounds.top)
        },
        render: function () {
            this.context.beginPath(), this.context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI, !1), this.context.fillStyle = "rgba(" + h(this.color).toString() + ", " + this.opacity + ")", this.context.fill()
        }
    };
    for (var P = t("#hero-background"), F = P.children("canvas"), R = F[0].getContext("2d"), X = [], L = 0; L < 40; L++) {
        var N = new O({
            canvas: F[0],
            context: R,
            vx: 4 * Math.random() - 2,
            vy: 4 * Math.random() - 2
        });
        N.randomizePosition(), X.push(N)
    }
    w(function t() {
        if (!a(P[0], 0, !0)) return w(t);
        R.clearRect(0, 0, F[0].width, F[0].height), X.forEach(function (t) {
            t.update(), t.render(), X.forEach(function (i) {
                if (t !== i) {
                    var e = i.x - t.x,
                        s = i.y - t.y,
                        a = Math.sqrt(e * e + s * s);
                    R.beginPath(), R.moveTo(t.x, t.y), R.lineTo(i.x, i.y), R.strokeStyle = "rgba(236, 240, 241, " + Math.max(0, Math.min(.5, (300 - a) / a)) + ")", R.stroke()
                }
            }.bind(this))
        }), w(t)
    });
    for (var _ = t("#hero-canvas"), j = _.children("canvas"), B = j[0].getContext("2d"), U = [], V = [], L = 0; L < 80; L++) {
        //if (L < 30)
        //for (; !u(N);) N.randomizePosition();
        //U.push(N);
    }
    for (L = 0; L < V.length; L++) {
        var G = new O({
            canvas: j[0],
            context: B,
            color: "#ff0000",
            x: V[L] ? 2 * V[L].x : 0,
            y: V[L] ? 2 * V[L].y : 0,
            radius: 10,
            vx: 0,
            vy: 0
        });
        G.isShape = !0, U.push(G)
    }
    w(function t() {
        if (!a(_[0], 0, !0)) return w(t);
        B.clearRect(0, 0, j[0].width, j[0].height);
        var i = [];
        U.forEach(function (t) {
            t.update(), t.isShape && (void 0 === t.t && (t.t = 10 * Math.random()), t.t += .2 * Math.random(), t.x = t.config.x + 2 * Math.cos(t.t), t.t += .2 * Math.random(), t.y = t.config.y + 3 * Math.sin(t.t))
        }), U.forEach(function (t) {
            u(t) ? i.push(t) : (t.color = "#ffffff", t.opacity += (0 - t.opacity) / 9, t.friction += (1 - t.friction) / 9, t.radius += (2 - t.radius) / 9)
        }), i.forEach(function (t) {

        }), U.forEach(function (t) {
            t.render()
        }), w(t)
    }), t("#skip-team").click(function () {
        var i = t(this).attr("href");
        return r(t(i), {
            easing: "easeInOutCirc"
        }), !1
    });
    var H = function (i) {
        this.elem = t(i), this.x = 0, this.y = 0, this.targetX = 0, this.targetY = 0, this.originX = 0, this.originY = 0, this.ox = this.x, this.oy = this.y, this.vx = 0, this.vy = 0, this.radius = 45, this.friction = .96, this.stiffness = 10, this.damping = .1, this.stableStiffness = 300, this.stableDamping = 1e3, this.stable = !0, this.dragging = !1, this.startedDragging = !1, this.initialDragState = {}, this.elem.on("click.cell", function () {
            return !1
        }), this.elem.on("mousedown.cell", this.drag.bind(this)), this.elem.on("mouseenter.cell", function (t) {
            this.elem.addClass("is-mouseover"), this.onMouseEnter && this.onMouseEnter.call(this, t)
        }.bind(this)), this.elem.on("mouseleave.cell", function (t) {
            this.elem.removeClass("is-mouseover"), this.onMouseLeave && this.onMouseLeave.call(this, t)
        }.bind(this))
    };
    H.prototype = {
        setPosition: function (t, i) {
            this.x = this.targetX = t, this.y = this.targetY = i
        },
        drag: function (e) {
            return this.initialDragState = {
                x: this.x,
                y: this.y,
                mx: q,
                my: A
            }, this.dragging = !0, this.stable = !1, t(i).off("mouseup.cell").on("mouseup.cell", function (e) {
                return this.startedDragging || (this.stable = !0, this.onClick && this.onClick.call(this, e)), t(i).off("mouseup.cell"), this.dragging = !1, this.startedDragging = !1, this.elem.removeClass("is-dragging"), !1
            }.bind(this)), !1
        },
        update: function () {
            if (this.dragging) {
                var t = this.initialDragState.x + (q - this.initialDragState.mx),
                    i = this.initialDragState.y + (A - this.initialDragState.my);
                this.x += (t - this.x) / 9, this.y += (i - this.y) / 9, this.vx = this.x - this.ox, this.vy = this.y - this.oy, this.x === this.ox && this.y === this.oy || this.elem.hasClass("is-dragging") || (this.elem.addClass("is-dragging"), this.startedDragging = !0)
            } else {
                var e = this.stable ? this.stableStiffness : this.stiffness,
                    s = this.stable ? this.stableDamping : this.damping,
                    a = -e * (this.x - this.targetX),
                    n = -s * this.vx;
                this.vx += .025 * (a + n) / this.radius;
                var o = -e * (this.y - this.targetY),
                    r = -s * this.vy;
                this.vy += .025 * (o + r) / this.radius, this.x += this.vx, this.y += this.vy, this.vx *= this.friction, this.vy *= this.friction;
                var l = this.x - this.ox,
                    c = this.y - this.oy;
                Math.sqrt(l * l + c * c) < .005 && (this.stable = !0)
            }
            this.ox = this.x, this.oy = this.y
        },
        render: function () {
            this.elem.css("transform", "translate3d(" + this.x + "px, " + this.y + "px, 0)")
        },
        getHitTest: function (t) {
            if (!(this.x + this.radius > t.x - t.radius && this.x - this.radius < t.x + t.radius && this.y + this.radius > t.y - t.radius && this.y - this.radius < t.y + t.radius)) return !1;
            var i = t.x - this.x,
                e = t.y - this.y,
                s = Math.sqrt(i * i + e * e),
                a = this.radius + t.radius;
            return !(s > a) && {
                dx: i,
                dy: e,
                distance: s,
                minDistance: a
            }
        },
        resolveCollision: function (t, i) {
            this.stable = !1, t.stable = !1;
            var e = i.minDistance - i.distance,
                s = Math.atan2(i.dy, i.dx);
            this.x -= .5 * e * Math.cos(s), this.y -= .5 * e * Math.sin(s), t.x += .5 * e * Math.cos(s), t.y += .5 * e * Math.sin(s);
            var a = {
                    vx: (this.vx + t.vx) / 2,
                    vy: (this.vy + t.vy) / 2
                },
                n = this.vx - a.vx,
                o = this.vy - a.vy,
                r = (n * i.dx + o * i.dy) / i.distance;
            if (!(r <= 0)) {
                var l = r * i.dx / i.distance,
                    c = r * i.dy / i.distance;
                this.vx -= 2 * l, this.vy -= 2 * c, t.vx += 2 * l, t.vy += 2 * c
            }
        }
    };
    for (var Q = [], Z = k.width(), W = 0, $ = [], J = t(".team-members > li").length, L = 0; L < J; L++) {
        var K = {
            x: 100 + 400 * Math.floor(L / 2) + (L % 2 == 0 ? 0 : 200),
            y: L % 2 == 0 ? 20 : -20
        };
        $.push(K), Z = Math.max(K.x + 52.5, Z)
    }
    $ = $.slice(0, 3).concat(function (t) {
        for (var i = []; t.length;) i.push(t.splice(Math.floor(Math.random() * t.length), 1)[0]);
        return i
    }($.slice(3))), t(".team-members > li").each(function (t) {
        if (!(t > $.length - 1)) {
            var i = new H(this);
            i.radius = 52.5, y(i, $[t]), i.originX = v($[t].x), i.originY = g($[t].y), i.onMouseEnter = p, i.onMouseLeave = x, i.onClick = b, Q.push(i)
        }
    }), k.on("resize", c(function () {
        Q.forEach(function (t, i) {
            y(t, $[i]), t.originX = v($[i].x), t.originY = g($[i].y)
        }), T()
    })), k.on("scroll", function () {
        T()
    });
    var tt, it = null,
        et = t("#team-section .connector"),
        st = t("#team-section .connector__line");
    w(function i() {
        if (!a(t("#team-section")[0], 0, !0)) return w(i);
        var e = t("#team-section").width(),
            s = t("#team-section").height(),
            n = (k.scrollTop() - t("#team-section").offset().top) / (s - S);
        if (n <= -.2 || n >= 1.2) return w(i);
        if (n > 0 ? t("#team-section .section-title").addClass("is-visible").removeClass("is-hidden") : t("#team-section .section-title").addClass("is-hidden"), n > .95) {
            var o = (n - .95) / .1;
            t("#team-section .section-title h1").css({
                transition: "none",
                opacity: 1 - o,
                transform: "translate3d(0, " + -.25 * S * o + "px, 0)"
            }), t("#team-section .section-title p").css({
                transition: "none",
                opacity: 1 - o,
                transform: "translate3d(0, " + -.3 * S * o + "px, 0)"
            })
        } else t("#team-section .section-title h1").css({
            transition: "",
            opacity: "",
            transform: ""
        }), t("#team-section .section-title p").css({
            transition: "",
            opacity: "",
            transform: ""
        });
        n > .1 && n < .9 ? t("#skip-team").css("opacity", "1") : t("#skip-team").css("opacity", ""), W = e - n * (Z + e), t(".team-members").css("transform", "translate3d(" + W + "px, 0, 0)"), t(".team").css("background-position", .25 * W + "px center"), Q.forEach(function (i) {
            if (i.update(), !i.dragging) {
                var e = .01 * t("#team-section").width() - 100,
                    s = .99 * t("#team-section").width() + 100,
                    a = i.x + W;
                if (a > e && a < s) {
                    var n = -80 * Math.sin((a - e) * Math.PI / (s - e));
                    i.randomY || (i.randomY = 30 * Math.random() - 15), i.targetY < .5 * k.height() ? i.targetY = Math.min(g(n + i.randomY), i.originY) : i.targetY = Math.max(g(-(n + i.randomY)), i.originY)
                }
            }
        });
        var r = [],
            l = [],
            c = [];
        if (Q.forEach(function (t) {
                -1 === l.indexOf(t) && Q.forEach(function (i) {
                    if (t !== i) {
                        var e = t.getHitTest(i);
                        e && (r.push(t), l.push(i), c.push(e))
                    }
                })
            }), r.forEach(function (t, i) {
                t.resolveCollision(l[i], c[i])
            }), Q.forEach(function (t) {
                t.render()
            }), it && !it.dragging) {
            var h = E / 2,
                d = S / 2,
                f = it.x + W,
                m = it.y,
                u = h - f,
                y = d - m,
                v = Math.atan2(y, u),
                p = f + 1.2 * it.radius * Math.cos(v),
                x = m + 1.2 * it.radius * Math.sin(v),
                b = h - 200 * Math.cos(v) - p,
                C = d - 75 * Math.sin(v) - x,
                T = Math.sqrt(b * b + C * C);
            st.width(T), et.css("transform-origin", p + "px " + x + "px"), et.css("transform", "rotate(" + 180 * v / Math.PI + "deg) translate3d(" + p + "px, " + x + "px, 0)")
        }
        w(i)
    }), !1 !== M && t("html").removeClass("svg")
}(jQuery, window, document);